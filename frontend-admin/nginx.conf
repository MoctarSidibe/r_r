events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # Handle admin paths only
        location /admin/ {
            try_files $uri $uri/ /admin/index.html;
        }
        
        # Handle admin assets
        location /admin/assets/ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Handle root path - serve admin by default
        location = / {
            return 301 /admin/;
        }
        
        # Reject non-admin paths
        location /candidate/ {
            return 404;
        }
        
        # Handle static assets with proper MIME types
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
        }
        
        # Handle Vite assets directory
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status": "healthy", "service": "admin-frontend"}';
            add_header Content-Type application/json;
        }
    }
}